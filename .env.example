# Skema Environment Configuration
# Copy this file to .env and fill in your values

# ===========================================
# APPLICATION SETTINGS
# ===========================================
APP_NAME=Skema
APP_VERSION=1.0.0
ENVIRONMENT=development
DEBUG=true

# ===========================================
# DATABASE CONFIGURATION
# ===========================================
# Development (Docker Compose)
DATABASE_URL=postgresql://skema_user:skema_password@localhost:5432/skema

# Production (replace with your actual database URL)
# DATABASE_URL=postgresql://user:password@host:port/database

# Database credentials (for Docker Compose)
POSTGRES_DB=skema
POSTGRES_USER=skema_user
POSTGRES_PASSWORD=skema_password

# ===========================================
# REDIS CONFIGURATION
# ===========================================
# Development
REDIS_URL=redis://localhost:6379/0

# Production (replace with your actual Redis URL)
# REDIS_URL=redis://user:password@host:port/0

# ===========================================
# SECURITY SETTINGS
# ===========================================
# Generate a secure secret key for production
# You can use: openssl rand -hex 32
SECRET_KEY=your-super-secret-development-key-change-in-production

# JWT Token Settings
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# CORS Origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,https://yourdomain.com

# ===========================================
# AI INTEGRATION
# ===========================================
# OpenAI API Key for AI Command Bar
OPENAI_API_KEY=your-openai-api-key-here

# AI Settings
OPENAI_MODEL=gpt-4
OPENAI_MAX_TOKENS=150
OPENAI_TEMPERATURE=0.7

# ===========================================
# FRONTEND SETTINGS
# ===========================================
# Next.js Public Environment Variables
NEXT_PUBLIC_API_URL=http://localhost:8000
NEXT_PUBLIC_WS_URL=ws://localhost:8000
NEXT_PUBLIC_APP_NAME=Skema
NEXT_PUBLIC_APP_VERSION=1.0.0

# Production Frontend URLs
# NEXT_PUBLIC_API_URL=https://api.yourdomain.com
# NEXT_PUBLIC_WS_URL=wss://api.yourdomain.com

# ===========================================
# LOGGING & MONITORING
# ===========================================
LOG_LEVEL=INFO

# Sentry DSN for error tracking (optional)
SENTRY_DSN=
NEXT_PUBLIC_SENTRY_DSN=

# ===========================================
# EMAIL CONFIGURATION (Optional)
# ===========================================
# SMTP settings for password reset emails
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASSWORD=your-app-password
SMTP_TLS=true
FROM_EMAIL=noreply@yourdomain.com

# ===========================================
# FILE STORAGE (Optional)
# ===========================================
# Local file storage (default)
UPLOAD_DIR=./uploads
MAX_FILE_SIZE=10485760  # 10MB in bytes

# AWS S3 settings (optional)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_S3_BUCKET=
AWS_S3_REGION=us-east-1

# ===========================================
# DOCKER & DEPLOYMENT
# ===========================================
# Worker processes for production
WORKER_PROCESSES=4

# Grafana admin password (for monitoring)
GRAFANA_PASSWORD=admin

# ===========================================
# DEVELOPMENT SETTINGS
# ===========================================
# Set to true to enable SQL query logging
SQL_ECHO=false

# Set to true to enable detailed error tracebacks
SHOW_ERROR_DETAILS=true

# API rate limiting (requests per second)
API_RATE_LIMIT=30
AUTH_RATE_LIMIT=5

# ===========================================
# PRODUCTION SECURITY
# ===========================================
# For production deployment, also consider:

# Database SSL settings
# DATABASE_SSL_MODE=require
# DATABASE_SSL_CERT_PATH=/path/to/cert.pem
# DATABASE_SSL_KEY_PATH=/path/to/key.pem
# DATABASE_SSL_CA_PATH=/path/to/ca.pem

# Redis SSL settings
# REDIS_SSL=true
# REDIS_SSL_CERT_PATH=/path/to/cert.pem
# REDIS_SSL_KEY_PATH=/path/to/key.pem
# REDIS_SSL_CA_PATH=/path/to/ca.pem

# Session security
# SESSION_SECURE=true
# SESSION_SAMESITE=strict

# Additional security headers
# FORCE_HTTPS=true
# HSTS_MAX_AGE=31536000

# ===========================================
# BACKUP CONFIGURATION
# ===========================================
# Backup schedule (cron format)
BACKUP_SCHEDULE="0 2 * * *"  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30

# Backup storage location
BACKUP_DIR=./backup

# ===========================================
# FEATURE FLAGS
# ===========================================
# Enable/disable features
ENABLE_REGISTRATION=true
ENABLE_OAUTH=false
ENABLE_AI_FEATURES=true
ENABLE_ANALYTICS=false
ENABLE_RATE_LIMITING=true

# ===========================================
# NOTES
# ===========================================
# 1. Never commit the .env file to version control
# 2. Use strong, unique passwords for production
# 3. Generate a new SECRET_KEY for each environment
# 4. Use environment-specific database and Redis URLs
# 5. Enable SSL/TLS for production databases
# 6. Set up proper monitoring and alerting
# 7. Configure backup strategies for production data
# 8. Use secrets management in production (e.g., Docker secrets, K8s secrets)